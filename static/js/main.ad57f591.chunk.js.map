{"version":3,"sources":["components/header.js","components/contry.js","components/country-by-name.js","components/country-by-region.js","components/contry-list.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderStyled","styled","header","Header","useState","value","setValue","useRef","body","document","getElementById","container","input","region","text","useEffect","textContent","console","log","ref","id","className","onClick","classList","add","current","style","background","remove","ContryStyled","div","Contry","flag","name","population","capital","loading","src","alt","CountryByNameStyled","form","CountryByName","countries","search","dispatch","useSelector","state","countryList","useDispatch","onChange","country","filter","toLowerCase","startsWith","type","payload","placeholder","CountryByRegionStyled","Region","select","regionContries","ContryListStyled","main","ContryList","setCountries","a","fetch","datacountrys","response","json","getCountries","then","list","catch","error","map","store","createStore","action","AppStyled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ad57f591.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderStyled = styled.header`\n  background: white;\n  box-shadow: rgb(0 0 0 / 6%) 0px 2px 4px 0px;\n\n  .header-content {\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  h1 {\n    font: 700 normal 24px/2.4rem var(--font);\n    margin: 0;\n  }\n  .mode {\n    display: flex;\n    align-items: center;\n    text-transform: capitalize;\n  }\n  .icono {\n    font-size: 3rem;\n  }\n  p {\n    font-size: 14px;\n    font-weight: 600;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 20px;\n    }\n  }\n`;\n\nfunction Header() {\n  const [value, setValue] = useState(\"\");\n  const iconMoon = useRef(null);\n  const header = useRef(null);\n  const body = document.getElementById(\"body\");\n  const container = document.getElementById(\"container\");\n  const input = document.getElementById(\"input\");\n  const region = document.getElementById(\"region\");\n  const text = document.getElementById(\"text\");\n  useEffect(() => {\n    const text = document.getElementById(\"text\");\n    setValue(text.textContent);\n    console.log(value);\n  }, []);\n\n  function darkMode() {\n    text.textContent = \"Ligth Mode\";\n    container.classList.add(\"country-list\");\n    header.current.style.background = \"#273542\";\n    input.classList.add(\"inputStyle\");\n    body.classList.add(\"bodyStyle\");\n    region.classList.add(\"button-region-filter\");\n  }\n  function ligthMode() {\n    container.classList.remove(\"country-list\");\n    header.current.style.background = \"\";\n    input.classList.remove(\"inputStyle\");\n    body.classList.remove(\"bodyStyle\");\n    region.classList.remove(\"button-region-filter\");\n    text.textContent = \"Dark Mode\";\n  }\n\n  function changeMode() {\n    if (value == \"dark mode\") {\n      setValue(\"\");\n      darkMode();\n    } else {\n      setValue(\"dark mode\");\n      ligthMode();\n    }\n  }\n  return (\n    <HeaderStyled ref={header} id=\"header\">\n      <div className=\"wrapper\">\n        <div className=\"header-content\">\n          <h1>Where in the world?</h1>\n          <div className=\"mode\" onClick={changeMode}>\n            <i className=\"icon-moon1 icono\"></i>\n            <p id=\"text\">dark mode</p>\n          </div>\n        </div>\n      </div>\n    </HeaderStyled>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ContryStyled = styled.div`\n  width: 16.5rem;\n  cursor: pointer;\n  border-radius: 5px;\n  box-shadow: 0px 0px 7px 2px rgb(0, 0, 0, 0.1);\n  overflow: hidden;\n  text-align: start;\n  img {\n    width: 100%;\n    height: 170px;\n    object-fit: cover;\n    vertical-align: top;\n    border-radius: 5px 5px 0px 0px;\n  }\n  .details {\n    padding: 1.5rem;\n    text-transform: capitalize;\n  }\n  .details h2 {\n    margin: 0;\n    font: 700 normal 1rem/1.5rem var(--font);\n    font-size: 18px;\n  }\n  .details p {\n    margin-bottom: 0.5rem;\n    font-size: 0.9rem;\n  }\n`;\n\nfunction Contry({ flag, name, population, region, capital, id }) {\n  return (\n    <ContryStyled>\n      <div>\n        <img loading=\"lazy\" src={flag} alt={`bandera de ${name}`} />\n        <div className=\"details\">\n          <h2>{name}</h2>\n          <p>\n            <strong>Population: </strong>\n            {population}\n          </p>\n          <p>\n            <strong>Region: </strong>\n            {region}\n          </p>\n          <p>\n            <strong>Capital: </strong>\n            {capital}\n          </p>\n        </div>\n      </div>\n    </ContryStyled>\n  );\n}\n\nexport default Contry;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst CountryByNameStyled = styled.form`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  height: 24px;\n  flex: 1;\n  max-width: 500px;\n  input {\n    flex: 1;\n    border-radius: 5px;\n    border: none;\n    box-sizing: border-box;\n    box-shadow: 0 2px 9px rgba(0, 0, 0, 0.05);\n    padding: 15px 10px 15px 3rem;\n    &::-webkit-input-placeholder {\n      color: #c4c4c4;\n    }\n  }\n  i {\n    position: absolute;\n    left: 0;\n    margin: 0 1rem;\n    font-size: 1.5rem;\n    color: #c4c4c4;\n  }\n`;\n\nfunction CountryByName({ countries }) {\n  const search = useRef(null);\n  const countryList = useSelector((state) => state.countryList);\n  const dispatch = useDispatch();\n\n  function searchCountryName() {\n    const country = countries.filter((country) => {\n      if (\n        country.name\n          .toLowerCase()\n          .startsWith(search.current.value.toLowerCase())\n      ) {\n        return true;\n      }\n    });\n    dispatch({\n      type: \"SET_COUNTRY_NAME\",\n      payload: country,\n    });\n  }\n  return (\n    <CountryByNameStyled onChange={searchCountryName}>\n      <i className=\"icon-search\"></i>\n      <input type=\"text\" placeholder=\"search country\" ref={search} id=\"input\" />\n    </CountryByNameStyled>\n  );\n}\n\nexport default CountryByName;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst CountryByRegionStyled = styled.div`\n  height: inherit;\n  select {\n    cursor: pointer;\n    text-transform: capitalize;\n    padding: 10px;\n    width: 50%;\n    border-radius: 5px;\n    border: none;\n    box-sizing: border-box;\n    box-shadow: 0 2px 9px rgba(0, 0, 0, 0.05);\n    width: 200px;\n    height: inherit;\n    color: #c4c4c4;\n    font-weight: 400;\n  }\n`;\n\nfunction Region({ countries }) {\n  const select = useRef(null);\n\n  const dispatch = useDispatch();\n\n  function regionChange() {\n    const region = select.current.value;\n    if (region === \"all\") {\n      return dispatch({\n        type: \"SET_COUNTRY_REGION\",\n        payload: countries,\n      });\n    }\n    const regionContries = countries.filter((country) => {\n      if (country.region.toLowerCase() === region) {\n        return true;\n      }\n    });\n    dispatch({\n      type: \"SET_COUNTRY_REGION\",\n      payload: regionContries,\n    });\n  }\n\n  return (\n    <CountryByRegionStyled>\n      <select name=\"\" onChange={regionChange} ref={select} id=\"region\">\n        <option value=\"all\">filter by region</option>\n        <option value=\"africa\">africa</option>\n        <option value=\"americas\">americas</option>\n        <option value=\"europe\">europe</option>\n        <option value=\"asia\">asia</option>\n        <option value=\"oceania\">oceania</option>\n      </select>\n    </CountryByRegionStyled>\n  );\n}\n\nexport default Region;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Contry from \"./contry\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CountryByName from \"./country-by-name\";\nimport Region from \"./country-by-region\";\n\nconst ContryListStyled = styled.main`\n  /* padding: 50px; */\n  .countries-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 80px;\n  }\n  .actions {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 45px;\n    margin: 2rem 0;\n    flex-wrap: wrap;\n  }\n  @media (max-width: 500px) {\n    .actions {\n      display: block;\n      margin-bottom: 100px;\n    }\n    .actions > * {\n      margin-bottom: 30px;\n      width: 100%;\n    }\n  }\n`;\n\nfunction ContryList() {\n  const dispatch = useDispatch();\n  const countryList = useSelector((state) => state.countryList);\n  const [countries, setCountries] = useState({});\n  useEffect(() => {\n    async function getCountries() {\n      const datacountrys = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const response = datacountrys.json();\n      return response;\n    }\n    getCountries()\n      .then((list) => {\n        setCountries(list);\n        dispatch({\n          type: \"SET_COUNTRY_REGION\",\n          payload: list,\n        });\n      })\n      .catch((error) => {\n        console.log(`hubo un error en el fetch ${error}`);\n      });\n  }, []);\n\n  return (\n    <ContryListStyled>\n      <div className=\"wrapper\">\n        <div className=\"actions\" id=\"actions\">\n          <CountryByName countries={countries} />\n          <Region countries={countries} />\n        </div>\n        <div className=\"countries-container\" id=\"container\">\n          {countryList.map((country) => {\n            return (\n              <Contry\n                flag={country.flag}\n                name={country.name}\n                population={country.population}\n                region={country.region}\n                capital={country.capital}\n                key={country.name}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </ContryListStyled>\n  );\n}\n\nexport default ContryList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport ContryList from \"./components/contry-list\";\nimport \"./icoMoon.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nconst initialState = {\n  countryList: [],\n};\n\nfunction reducer(state = {}, action) {\n  switch (action.type) {\n    case \"SET_COUNTRY_LIST\": {\n      return { ...state, countryList: action.payload };\n    }\n    case \"SET_COUNTRY_REGION\": {\n      return { ...state, countryList: action.payload };\n    }\n    case \"SET_COUNTRY_NAME\": {\n      return { ...state, countryList: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst store = createStore(reducer, initialState);\n\nconst AppStyled = styled.div`\n  .wrapper {\n    max-width: 1366px;\n    margin: auto;\n    padding: 0 20px;\n  }\n`;\n\nfunction App() {\n  return (\n    <AppStyled>\n      <Provider store={store}>\n        <Header />\n        <ContryList />\n      </Provider>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}